/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Classes.Conexao;
import Classes.Produto;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Caio
 */
public class TelaDeVisualizacao extends javax.swing.JFrame {

    /**
     * Creates new form TelaDeVisualizacao
     */
    public TelaDeVisualizacao() {
        initComponents();
        
        Connection conn = new Conexao().getConnection();
        
        try{
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM produtos";
            
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()) {
                String id = rs.getString("id");
                String nome = rs.getString("nome");
                String codigo = rs.getString("codigo");
                String fornecedor = rs.getString("fornecedor");
                String quantidade = rs.getString("quantidade");
                String quantidade_minima = rs.getString("quantidade_minima");
                String categoria = rs.getString("categoria");
                String localizacao = rs.getString("localizacao_fisica");
                
                String tbData[] = {id, codigo, nome, fornecedor, quantidade, quantidade_minima, categoria, localizacao};
                DefaultTableModel tblModel = (DefaultTableModel)tabelaProdutos.getModel();
                tblModel.addRow(tbData);
            }
        } catch(Exception e) {
            System.err.println("Erro ao exibir os produtos: " + e);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnCadProd = new javax.swing.JButton();
        btnTodUsu = new javax.swing.JButton();
        btnCadUsu = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        campoPesquisa = new javax.swing.JTextField();
        pesquisaBtn = new javax.swing.JButton();
        deletarProduto = new javax.swing.JButton();
        btnEditarProduto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(238, 100));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone-certo.PNG"))); // NOI18N
        jLabel1.setText("LOGO");
        jLabel1.setPreferredSize(new java.awt.Dimension(236, 100));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 10, 148, 46));

        btnCadProd.setBackground(new java.awt.Color(255, 255, 255));
        btnCadProd.setText("Cadastrar produto");
        btnCadProd.setBorder(null);
        btnCadProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadProdActionPerformed(evt);
            }
        });
        jPanel1.add(btnCadProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 76, 120, 46));

        btnTodUsu.setBackground(new java.awt.Color(255, 255, 255));
        btnTodUsu.setText("Todos os usuários");
        btnTodUsu.setBorder(null);
        btnTodUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodUsuActionPerformed(evt);
            }
        });
        jPanel1.add(btnTodUsu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 128, 120, 46));

        btnCadUsu.setBackground(new java.awt.Color(255, 255, 255));
        btnCadUsu.setText("Cadastrar usuário");
        btnCadUsu.setBorder(null);
        btnCadUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadUsuActionPerformed(evt);
            }
        });
        jPanel1.add(btnCadUsu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 120, 46));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 125, 625));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Estoque");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 16, -1, -1));

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código", "Nome", "Fornecedor", "Qtd Atual", "Qtd Mínima", "Categoria", "Localização Física"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.setGridColor(new java.awt.Color(0, 0, 0));
        tabelaProdutos.setPreferredSize(new java.awt.Dimension(525, 600));
        tabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);
        if (tabelaProdutos.getColumnModel().getColumnCount() > 0) {
            tabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(1).setPreferredWidth(50);
            tabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(180);
            tabelaProdutos.getColumnModel().getColumn(4).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(4).setPreferredWidth(80);
            tabelaProdutos.getColumnModel().getColumn(5).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(5).setPreferredWidth(50);
            tabelaProdutos.getColumnModel().getColumn(7).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 45, 920, 569));

        campoPesquisa.setForeground(new java.awt.Color(204, 204, 204));
        campoPesquisa.setText("Digite para pesquisar");
        getContentPane().add(campoPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, 210, 30));

        pesquisaBtn.setForeground(new java.awt.Color(204, 204, 204));
        pesquisaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search icon.png"))); // NOI18N
        pesquisaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesquisaBtnMouseClicked(evt);
            }
        });
        getContentPane().add(pesquisaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 30, 30));

        deletarProduto.setForeground(new java.awt.Color(204, 204, 204));
        deletarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/211835_trash_icon (1).png"))); // NOI18N
        deletarProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletarProdutoMouseClicked(evt);
            }
        });
        getContentPane().add(deletarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 30, 30));

        btnEditarProduto.setForeground(new java.awt.Color(204, 204, 204));
        btnEditarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1976055_edit_edit document_edit file_edited_editing_icon.png"))); // NOI18N
        btnEditarProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarProdutoMouseClicked(evt);
            }
        });
        btnEditarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProdutoActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 30, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadUsuActionPerformed
        CadastrodeUsuario viewCadUsuario = new CadastrodeUsuario();
        viewCadUsuario.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCadUsuActionPerformed

    private void tabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosMouseClicked
        
    }//GEN-LAST:event_tabelaProdutosMouseClicked

    private void deletarProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletarProdutoMouseClicked
        //System.out.println(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0));
        String idString = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0);
        int id = Integer.parseInt(idString);
        
        int input = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja deletar esse produto?");
        if(input == 0) {
            Produto p = new Produto();
            p.delete(id);
            JOptionPane.showMessageDialog(null, "Produto deletado com sucesso!");
            ((DefaultTableModel)tabelaProdutos.getModel()).removeRow(tabelaProdutos.getSelectedRow());
        }        
    }//GEN-LAST:event_deletarProdutoMouseClicked

    private void btnEditarProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarProdutoMouseClicked
        String idString = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0);
        int id = Integer.parseInt(idString);
        String codigo = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 1);
        String nome = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 2);
        String fornecedor = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 3);
        String qtd_atual_string = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 4);
        int qtd_atual = Integer.parseInt(qtd_atual_string);
        String qtd_minima_string = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 5);
        int qtd_minima = Integer.parseInt(qtd_minima_string);
        String localizacao = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 6);
        
        int input = JOptionPane.showConfirmDialog(null, "Os novos dados serão os dados alterados diretamente na tabela, deseja alterar os dados do produto selecionado?");
        if(input == 0) {
            Produto p = new Produto();
            p.update(id, codigo, nome, fornecedor, qtd_atual, qtd_minima, localizacao);
            
            if (qtd_atual < qtd_minima) {
            Object[] options = { "Enviar", "Cancelar" };
                JOptionPane.showOptionDialog(null, "Enviar e-mail para fornecedor?", "Estoque minimo atingido",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            }
        }
            else{
                JOptionPane.showMessageDialog(null, "Produto atualizado com sucesso!");
            }
         
    }//GEN-LAST:event_btnEditarProdutoMouseClicked

    private void btnCadProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadProdActionPerformed
        CadastroProdutos CadProd = new CadastroProdutos();
        CadProd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCadProdActionPerformed

    private void btnTodUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodUsuActionPerformed
        TodosOsUsuarios TodUsu = new TodosOsUsuarios();
        TodUsu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTodUsuActionPerformed

    private void btnEditarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarProdutoActionPerformed

    private void pesquisaBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisaBtnMouseClicked
        String campo_pesquisa = campoPesquisa.getText();
        
        Connection conn = new Conexao().getConnection();
        try {        
            DefaultTableModel tblRemove = (DefaultTableModel)tabelaProdutos.getModel();
            
            if(campo_pesquisa.equals(null)) {
                String sql = "SELECT * FROM produtos";
                
                while(tblRemove.getRowCount() > 0) {
                    if (tblRemove.getRowCount() > 0){
                        for (int i=1;i<=tblRemove.getRowCount();i++){
                            tblRemove.removeRow(0);
                        }            
                    }
                }   
                
                PreparedStatement pstm = conn.prepareStatement(sql); 
                ResultSet rs = pstm.executeQuery();
                
                while(rs.next()) {                
                    String id = rs.getString("id");
                    String nome = rs.getString("nome");
                    String codigo = rs.getString("codigo");
                    String fornecedor = rs.getString("fornecedor");
                    String quantidade = rs.getString("quantidade");
                    String quantidade_minima = rs.getString("quantidade_minima");
                    String categoria = rs.getString("categoria");
                    String localizacao = rs.getString("localizacao_fisica");

                    String tbData[] = {id, codigo, nome, fornecedor, quantidade, quantidade_minima, categoria, localizacao};
                    DefaultTableModel tblModel = (DefaultTableModel)tabelaProdutos.getModel();
                    tblModel.addRow(tbData);
                }                
                
            } else { 
                String sql = "SELECT * FROM produtos WHERE nome LIKE '" + campo_pesquisa + "%'";                  
                
                while(tblRemove.getRowCount() > 0) {
                    if (tblRemove.getRowCount() > 0){
                        for (int i=1;i<=tblRemove.getRowCount();i++){
                            tblRemove.removeRow(0);
                        }            
                    }
                }
                PreparedStatement pstm = conn.prepareStatement(sql); 
                ResultSet rs = pstm.executeQuery();   
                
                while(rs.next()) {                
                    String id = rs.getString("id");
                    String nome = rs.getString("nome");
                    String codigo = rs.getString("codigo");
                    String fornecedor = rs.getString("fornecedor");
                    String quantidade = rs.getString("quantidade");
                    String quantidade_minima = rs.getString("quantidade_minima");
                    String categoria = rs.getString("categoria");
                    String localizacao = rs.getString("localizacao_fisica");

                    String tbData[] = {id, codigo, nome, fornecedor, quantidade, quantidade_minima, categoria, localizacao};
                    DefaultTableModel tblModel = (DefaultTableModel)tabelaProdutos.getModel();
                    tblModel.addRow(tbData);
                }                
            }                        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao procurar pelo produto: " + e);            
        }
    }//GEN-LAST:event_pesquisaBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDeVisualizacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDeVisualizacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDeVisualizacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDeVisualizacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {;
            public void run() {
                new TelaDeVisualizacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadProd;
    private javax.swing.JButton btnCadUsu;
    private javax.swing.JButton btnEditarProduto;
    private javax.swing.JButton btnTodUsu;
    private javax.swing.JTextField campoPesquisa;
    private javax.swing.JButton deletarProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pesquisaBtn;
    private javax.swing.JTable tabelaProdutos;
    // End of variables declaration//GEN-END:variables
}
